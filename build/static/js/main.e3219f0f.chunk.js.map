{"version":3,"sources":["404.js","activity.js","api.js","newActivityForm.js","activities.js","home.js","activityForm.js","routineForm.js","routine_activitiesForm.js","routine.js","myRoutines.js","navBar.js","routines.js","userForm.js","users.js","index.js"],"names":["Component404","url","useParams","Activity","props","activity","className","name","description","duration","count","process","API_URL_STRING","APIFetch","a","method","token","body","fetch","toUpperCase","headers","JSON","stringify","response","json","NewActivityForm","useState","setName","setDescription","message","setMessage","onSubmit","event","preventDefault","id","required","type","placeholder","value","onChange","target","disabled","Activities","activities","setActivities","showCreateForm","setShowCreateForm","useEffect","then","onClick","map","Home","user","ActivityForm","routine","setShowForm","baseActivity","setCount","setDuration","selected","setSelected","activityId","idx","filter","i","length","RoutineForm","goal","setGoal","isPublic","setIsPublic","console","log","error","checked","htmlFor","Routine_ActivitiesForm","routineActivityId","success","Routine","showRoutineForm","setShowRoutineForm","showActivityForm","setShowActivityForm","showRoutineActivityForm","setShowRoutineActivityForm","creatorName","creatorId","MyRoutines","routines","setRoutines","showForm","NavBar","to","Routines","updater","setUpdater","UserForm","setToken","setUser","register","setRegister","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","hidden","setHidden","remember","setRemember","output","charAt","localStorage","setItem","Users","removeItem","App","getItem","Number","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3219f0f.chunk.js","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\n\n\nconst Component404=()=>\n{\n    const params=useParams();\n    const url=params[0];\n    return <h1>404 Error: Page for {url} does not exist.</h1>\n}\n\nexport default Component404;","import React from 'react';\n\n\nconst Activity = (props) => \n{\n    const activity=props.activity;\n\n\n\n    return <div className=\"Activity\">\n        <h4>{activity.name}</h4>\n        <h5>{activity.description}</h5>\n        <h5>{activity.duration?\"Duration:\"+activity.duration:null}</h5>\n        <h5>{activity.count?\"Count:\"+activity.count:null}</h5>\n\n    </div>;\n}\n\nexport default Activity;","const {API_URL_STRING='https://fitnesstrac-kr.herokuapp.com/api/'} = process.env;\n//const test=\"https://protected-earth-18251.herokuapp.com/api/\";\nconst APIFetch = async (\n    {\n        url:url,\n        method:method,\n        token:token,\n        body:body\n    })=>\n{\n    try\n    {\n        const response = await fetch(API_URL_STRING+url,\n        {\n            method:method ? method.toUpperCase():\"GET\",\n            headers:\n            {\n                    'Content-Type':'application/json',\n                    ...(token && {'Authorization':'Bearer '+token}),\n            },\n            body:JSON.stringify(body)\n        });\n        return await response.json();\n    }\n    catch(error)\n    {\n        throw error;\n    }\n}\n\nexport default APIFetch;","import React, { useState} from 'react';\n\nimport APIFetch from './api';\n\nconst NewActivityForm = (props) => \n{\n    const token=props.token;\n\n    const[name,setName]=useState(\"\");\n    const[description,setDescription]=useState(\"\");\n    const [message,setMessage]=useState(\"\");\n\n    return <form onSubmit={async(event)=>\n    {\n        event.preventDefault();\n        const response= await APIFetch(\n        {\n            url:`activities/`,\n            method:\"POST\",\n            token:token,\n            body:\n            {\n                name:name,\n                description:description\n            }\n        }\n        );\n\n        if(response.id)\n        {\n            setMessage(\"activity created\");\n        }\n    }}>\n\n        <input required type=\"text\" placeholder=\"Name\" value={name} onChange={(event)=>\n        {\n            setName(event.target.value);\n        }}/>\n\n        <input required type=\"text\" placeholder=\"Description\" value={description} onChange={(event)=>\n        {\n            setDescription(event.target.value);\n        }}/>\n\n        <button type=\"submit\" disabled={!name||!description}>Add</button>\n        \n        <p>{message}</p>\n    </form>\n}\n\nexport default NewActivityForm;","import React, { useEffect, useState} from 'react';\nimport Activity from './activity';\nimport APIFetch from './api';\nimport NewActivityForm from './newActivityForm';\n\nconst Activities = (props) => \n{\n    const token=props.token;\n    const [activities,setActivities]=useState([])\n    const [showCreateForm,setShowCreateForm]=useState(false);\n\n    useEffect(()=>\n    {\n        APIFetch(\n        {\n            url:`activities/`,\n            method:\"GET\",\n        }).then((response)=>\n        {\n            setActivities(response);\n        });\n    },[]);\n\n\n\n    return <>\n        {token?\n        <>\n            <button onClick={()=>\n            {\n                setShowCreateForm(!showCreateForm);\n            }}>Create activity</button>\n            {showCreateForm?\n            <NewActivityForm token={token}></NewActivityForm> :null}\n        </>:null}\n        {activities.map((activity)=>\n        {\n            return <Activity key={activity.id} activity={activity} ></Activity>\n        })}\n    </>;\n}\n\nexport default Activities;","import React from 'react';\n\nconst Home = (props) => \n{\n  const user=props.user;\n  return <h1>Welcome {user?user.name:\"to FitnessTrak.kr\"}</h1>\n}\n\nexport default Home;","import React, { useState,useEffect } from 'react';\nimport Activity from './activity';\n\nimport APIFetch from './api';\n\nconst ActivityForm = (props) => \n{\n    const token=props.token;\n    const routine=props.routine;\n    const setShowForm=props.setShowForm;\n    const baseActivity=props.activity\n\n    const [count,setCount]=useState(1);\n    const [duration,setDuration]=useState(1);\n    const [selected,setSelected]=useState(0);\n    const [activities,setActivities]=useState([])\n    \n    useEffect(()=>\n    {\n        APIFetch(\n        {\n            url:`activities/`,\n            method:\"GET\",\n        }).then((response)=>\n        {\n            setActivities(response);\n        });\n        if(baseActivity)\n        {\n            setCount(baseActivity.count);\n            setDuration(baseActivity.duration);\n        }\n    },[]);\n\n    return <form onSubmit={async(event)=>\n    {\n        event.preventDefault();\n        const response= await APIFetch(\n        {\n            url:`routines/${routine.id}/activities/`,\n            method:\"POST\",\n            token:token,\n            body:\n            {\n                activityId:activities[selected].id,\n                count:count,\n                duration:duration\n            }\n        }\n        );\n\n        if(response.id)\n        {\n            setShowForm(false);\n        }\n    }}>\n\n        <div className=\"scrollbox\">\n            {activities.map((activity,idx)=>\n            {\n                activity.idx=idx;\n                return activity;\n            }).filter((activity)=>\n            {\n                let i=0;\n                while(i<routine.activities.length)\n                {\n                    if(activity.id===routine.activities[i])\n                    {\n                        return false;\n                    }\n                    i++;\n                }\n                return true;\n            }).map((activity)=>\n            {\n                return <div key={activity.id}>\n                    <Activity activity={activity}></Activity>\n                    <button type=\"button\" onClick={()=>\n                    {\n                        setSelected(activity.idx);\n                    }}>Select</button>\n                </div>\n            })}\n        </div>\n\n        <input required type=\"text\" placeholder=\"Count\" value={count} onChange={(event)=>\n        {\n            setCount(event.target.value);\n        }}/>\n\n        <input required type=\"text\" placeholder=\"Duration\" value={duration} onChange={(event)=>\n        {\n            setDuration(event.target.value);\n        }}/>\n\n\n\n\n        <button type=\"submit\" disabled={!count||!duration}>Add</button>\n    </form>\n}\n\nexport default ActivityForm;","import React, { useState,useEffect } from 'react';\n\nimport APIFetch from './api';\n\nconst RoutineForm = (props) => \n{\n    const token=props.token;\n    const routine=props.routine;\n    const setShowForm=props.setShowForm;\n\n\n    const [name,setName]=useState(\"\");\n    const [goal,setGoal]=useState(\"\");\n    const [isPublic,setIsPublic]=useState(false);\n    const [message,setMessage]=useState(\"\");\n\n    //setup use effect\n    useEffect(()=>\n    {\n        if(routine)\n        {\n            setName(routine.name);\n            setGoal(routine.goal);\n            setIsPublic(routine.isPublic);\n        }\n    },\n    []);\n\n    //message manager\n    useEffect(()=>\n    {\n        setMessage(\"Enter name and goal to create a routine.\");\n    },\n    [name,goal]);\n\n    return <form onSubmit={async(event)=>\n    {\n        event.preventDefault();\n\n        console.log(routine);\n        const response= await APIFetch(\n        {\n            url:`routines/${(routine?routine.id+\"/\":\"\")}`,\n            method:`${routine?\"PATCH\":\"POST\"}`,\n            token:token,\n            body:\n            {\n                name:name,\n                goal:goal,\n                isPublic:isPublic\n            }\n        }\n        );\n\n        if(response.id)\n        {\n            setShowForm(false);\n        }\n        else\n        {\n            setMessage(response.error);\n        }\n    }}>\n        <input required type=\"text\" placeholder=\"Name\" value={name} onChange={(event)=>\n        {\n            setName(event.target.value);\n        }}/>\n\n        <input required type=\"text\" placeholder=\"Goal\" value={goal} onChange={(event)=>\n        {\n            setGoal(event.target.value);\n        }}/>\n        <div>\n            <input type=\"checkbox\" checked={isPublic} value={isPublic}  onChange={()=>\n            {\n                setIsPublic(!isPublic);\n            }}/>\n            <label htmlFor=\"Public\">Public</label>\n        </div>\n\n        <p>{message}</p>\n\n        <button type=\"submit\" disabled={!name||!goal}>{routine?\"Edit\":\"Create\"}</button>\n    </form>\n}\n\nexport default RoutineForm;","import React, { useState,useEffect } from 'react';\n\nimport APIFetch from './api';\n\nconst Routine_ActivitiesForm = (props) => \n{\n\n    const token=props.token;\n    const activity=props.activity\n\n    const [count,setCount]=useState(1);\n    const [duration,setDuration]=useState(1);\n    const [message,setMessage]=useState(\"\");\n    \n    useEffect(()=>\n    {\n        if(activity)\n        {\n            setCount(activity.count);\n            setDuration(activity.duration);\n        }\n    },[]);\n\n    return <form onSubmit={async(event)=>\n        {\n            event.preventDefault();\n            const response= await APIFetch(\n            {\n                url:`routine_activities/${activity.routineActivityId}`,\n                method:\"PATCH\",\n                token:token,\n                body:\n                {\n                    count:count,\n                    duration:duration\n                }\n            }\n            );\n    \n            if(response.id)\n            {\n                setMessage(\"Activity updated.\");\n            }\n        }}>\n    \n    \n            <input required type=\"text\" placeholder=\"Count\" value={count} onChange={(event)=>\n            {\n                setCount(event.target.value);\n            }}/>\n    \n            <input required type=\"text\" placeholder=\"Duration\" value={duration} onChange={(event)=>\n            {\n                setDuration(event.target.value);\n            }}/>\n    \n            \n    \n    \n            <button type=\"submit\" disabled={!count||!duration}>Submit Edit</button>\n\n            <button onClick={(event)=>\n            {\n                event.preventDefault();\n                APIFetch(\n                {\n                    url:`routine_activities/${activity.routineActivityId}`,\n                    method:\"DELETE\",\n                    token:token\n                }\n                ).then((response)=>\n                {\n                    if(response.success)\n                    {\n                        setMessage(\"Activity deleted.\");\n                    }\n                })\n        \n                \n            }}>Delete</button>\n\n            <p>{message}</p>\n        </form>\n}\n\nexport default Routine_ActivitiesForm;","import React, {useEffect, useState} from 'react';\nimport Activity from './activity';\nimport ActivityForm from './activityForm';\nimport APIFetch from './api';\n\nimport RoutineForm from './routineForm';\nimport Routine_ActivitiesForm from './routine_activitiesForm';\n\n\nconst Routine = (props) => \n{\n    const routine=props.routine;\n    const token=props.token;\n    const user=props.user;\n    \n    const [showRoutineForm,setShowRoutineForm]=useState(false);\n    const [showActivityForm,setShowActivityForm]=useState(false);\n    const [showRoutineActivityForm,setShowRoutineActivityForm]=useState(false);\n\n    useEffect(()=>\n    {\n        console.log(routine);\n        console.log(user);\n\n    },\n    [showRoutineForm])\n\n\n    return <div className=\"Routine\">\n    <h2>{routine.name}</h2>\n    <h3>By:{routine.creatorName}</h3>\n    <h3>Goal:{routine.goal}</h3>\n    <h3>Activities:</h3>\n    {routine.activities.map((activity)=>\n    {\n        return <>\n             {user.id===routine.creatorId?\n             <>\n                <button onClick={()=>\n                {\n                    setShowRoutineActivityForm(!showRoutineActivityForm);\n                }}>Edit this activity</button>\n                {showRoutineActivityForm?\n                <Routine_ActivitiesForm key={activity.routineActivityId} token={token} activity={activity}></Routine_ActivitiesForm>:null}\n            </>:null}\n            \n            <Activity key={activity.id} activity={activity} token={token}></Activity>\n        </>;\n    })}\n    {user.id===routine.creatorId?\n    <>\n        <button onClick={()=>\n        {\n            setShowRoutineForm(!showRoutineForm);\n        }}>Edit this routine</button>\n        <button onClick={()=>\n        {\n            APIFetch(\n            {\n                url:`routines/${routine.id}/`,\n                method:`DELETE`,\n                token:token,\n            }\n            ).then(()=>\n            {\n\n            })\n        }}>Delete this routine</button>\n        <button onClick={()=>\n        {\n            setShowActivityForm(!showActivityForm);\n        }}>Add activities</button>\n        {showRoutineForm?\n        <RoutineForm token={token} routine={routine} setShowForm={setShowRoutineForm}></RoutineForm>:null}\n        {showActivityForm?\n        <ActivityForm token={token} routine={routine} setShowForm={setShowActivityForm}></ActivityForm>:null}\n\n    </>:null}\n    </div>;\n}\n\nexport default Routine;","import React, { useEffect, useState } from 'react';\nimport APIFetch from './api';\nimport Routine from './routine';\nimport RoutineForm from './routineForm';\n\nconst MyRoutines = (props) => \n{\n    const token=props.token;\n    const user=props.user;\n    const [routines,setRoutines]=useState([]);\n    const [showForm,setShowForm]=useState(false);\n    useEffect(()=>\n    {\n        APIFetch(\n        {\n            url:`users/${user.name}/routines`,\n            method:\"GET\",\n            token:token\n        }).then((response)=>\n        {\n            console.log(response);\n            setRoutines(response);\n        });\n    },[showForm])\n    return <>\n        <button onClick={()=>\n        {\n            setShowForm(!showForm);\n        }}>Create a new routine</button>\n        {showForm?\n        <RoutineForm token={token} user={user} setShowForm={setShowForm}></RoutineForm>:null}\n    {routines.map((routine)=>\n    {\n        return <Routine key={routine.id} routine={routine} token={token} user={user}></Routine>;\n    })}\n    </>;\n}\n\nexport default MyRoutines;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst NavBar = (props)=>\n{\n    const token=props.token;\n\n\n    return <h2 className=\"NavBar\">\n        <NavLink to=\"/\">Home</NavLink>|\n        <NavLink to=\"/routines/\">Routines</NavLink>|\n        {token ? <><NavLink to=\"/myroutines/\">My Routines</NavLink>|</>:null}\n        <NavLink to=\"/activities/\">Activities</NavLink>\n    </h2>\n}\n\nexport default NavBar;","import React, { useEffect, useState } from 'react';\nimport APIFetch from './api';\nimport Routine from './routine';\n\n\n\nconst Routines = (props) => \n{\n    const token=props.token;\n    const user=props.user;\n    const [routines,setRoutines]=useState([]);\n    const [updater,setUpdater]=useState([]);\n\n\n\n    useEffect(()=>\n    {\n        APIFetch(\n        {\n            url:\"routines/\",\n            method:\"GET\"\n        }).then((response)=>\n        {\n            setRoutines(response);\n        });\n    },[updater])\n\n\n    return <>\n    {routines.map((routine)=>\n    {\n        return <Routine key={routine.id} routine={routine} token={token} user={user} setUpdater={setUpdater}></Routine>;\n    })}\n    </>;\n}\n\nexport default Routines;","import React, { useState,useEffect } from 'react';\nimport APIFetch from './api';\n\nconst UserForm = (props) => \n{\n    const setToken=props.setToken;\n    const setUser=props.setUser;\n\n\n    const [register,setRegister]=useState(false);\n    const [username,setUsername]=useState(\"\");\n    const [password,setPassword]=useState(\"\");\n    const [confirmPassword,setConfirmPassword]=useState(\"\");\n    const [message,setMessage]=useState(\"\");\n    const [hidden,setHidden]=useState(true);\n    const [remember,setRemember]=useState(true);\n    \n    //message manager\n    useEffect(()=>\n    {\n        if(confirmPassword&&register)\n        {\n            if(confirmPassword!==password)\n            {\n                let output=\"Password match o=matching character, x=wrong character, _=missing character, *=extra character:\";\n                for(let i=0;i<password.length||i<confirmPassword.length;i++)\n                {\n                    if(i<password.length)\n                    {\n                        if(i<confirmPassword.length)\n                        {\n                            if(password.charAt(i)===confirmPassword.charAt(i))\n                            {\n                                output+=\"o\";\n                            }\n                            else\n                            {\n                                output+=\"x\";\n                            }\n                        }\n                        else\n                        {\n                            output+=\"_\";\n                        }\n                    }\n                    else\n                    {\n                        output+=\"*\";\n                    }\n                }\n                setMessage(output);\n            }\n            else\n            {\n                setMessage(\"Passwords match!\")\n            }\n        }\n        else\n        {\n            setMessage(\"Enter username and password to \"+(register?\"register\":\"login\")+\".\");\n        }\n    },[password,confirmPassword,register])\n\n    return <form onSubmit={async(event)=>\n    {\n            event.preventDefault();\n            const response= await APIFetch(\n            {\n                url:`users/${register?\"register\":\"login\"}`,\n                method:\"POST\",\n                body:\n                {\n                    username:username,\n                    password:password\n                }\n            }\n            );\n            console.log(response);\n\n            if(response.token)\n            {\n                setToken(response.token);\n                setMessage(\"You are logged in.\");\n                setUser(\n                {\n                    id:response.user.id,\n                    name:response.user.username\n                });\n                if(remember)\n                {\n                    localStorage.setItem(\"token\",response.token);\n                    localStorage.setItem(\"username\",response.user.username);\n                    localStorage.setItem(\"id\",response.user.id);\n                }\n            }\n            else\n            {\n                setMessage(response.error);\n            }\n    }}>\n        <div>\n            <input type=\"checkbox\" checked={register} value={register}  onChange={()=>\n            {\n                setRegister(!register);\n            }}/>\n            <label htmlFor=\"Register\">Register</label>\n        </div>\n        <input required type=\"text\" placeholder=\"Username\" value={username} onChange={(event)=>\n        {\n            setUsername(event.target.value);\n        }}/>\n        <input required type={hidden ? \"password\": \"text\"} placeholder=\"Password\" value={password} onChange={(event)=>\n        {\n            setPassword(event.target.value);\n        }}/>\n        <div>\n            <input type=\"checkbox\" checked={hidden} value={hidden}  onChange={()=>\n            {\n                setHidden(!hidden);\n            }}/>\n            <label htmlFor=\"Hide Password\">Hide Password</label>\n        </div>\n        \n        <input required type=\"password\" disabled={!register} placeholder=\"Confirm Password\" value={confirmPassword} onChange={(event)=>\n        {\n            setConfirmPassword(event.target.value);\n        }}/>\n        \n        <div>\n            <input type=\"checkbox\" checked={remember} value={remember}  onChange={()=>\n            {\n                setRemember(!remember);\n            }}/>\n            <label htmlFor=\"Remember Me\">Remember Me</label>\n        </div>\n\n        <p>{message}</p>\n\n        <button type=\"submit\" disabled={!username||!password||(register&&password!==confirmPassword)}>{register?\"Register\":\"Login\"}</button>\n    </form>\n}\n\nexport default UserForm;","import React from 'react';\nimport UserForm from './userForm';\n\nconst Users = (props) => \n{\n    const setToken=props.setToken;\n    const user=props.user;\n    const setUser=props.setUser;\n\n    \n\n    return user ? \n    <>\n        <h2>Logged in as {user.name}</h2>\n        <button onClick={(event)=>\n        {\n            event.preventDefault();\n            setToken(\"\");\n            setUser(\"\");\n            localStorage.removeItem(\"user\");\n            localStorage.removeItem(\"token\");\n        }\n\n        }>Logout</button>\n    </>:<UserForm setToken={setToken} setUser={setUser}></UserForm>\n}\n\nexport default Users;","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter,Route,Switch} from 'react-router-dom';\nimport Component404 from './404';\nimport Activities from './activities';\nimport Home from './home';\nimport MyRoutines from './myRoutines';\nimport NavBar from './navBar';\nimport Routines from './routines';\nimport './style.css';\n\nimport Users from './users';\n\nconst App = () => {\n    const [token,setToken]=useState(localStorage.getItem(\"token\")||\"\");\n    const [user,setUser]=useState(\n    {\n        id:Number(localStorage.getItem(\"id\")),\n        name:localStorage.getItem(\"username\")\n    }||null);\n\n\n\n    return <BrowserRouter>\n        <NavBar token={token}></NavBar>\n\n        <Users setToken={setToken} setUser={setUser} user={user}/>\n        \n        <Switch>\n            <Route exact path =\"/\">\n                <Home user={user}></Home>\n            </Route>\n\n            <Route exact path =\"/routines/\">\n                <Routines token={token} user={user}></Routines>\n            </Route>\n\n            <Route exact path =\"/myroutines/\">\n                <MyRoutines token={token} user={user}></MyRoutines>\n            </Route>\n\n            <Route exact path =\"/activities/\">\n                <Activities token={token}></Activities>\n            </Route>\n\n            <Route path=\"/*\">\n                <Component404></Component404>\n            </Route>\n        </Switch >\n    </BrowserRouter>\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('app'),\n);"],"sourceRoot":""}